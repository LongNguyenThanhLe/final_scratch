version: 2.1
aliases:
  - &persist
    persist_to_workspace:
        root: .
        paths: .
  - &restore
    attach_workspace:
        at: ~/repo
  - &defaults
    docker:
      - image: circleci/node:8.16-browsers
    working_directory: ~/repo

jobs:
  setup:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - v1-git-{{ .Revision }}
            - v1-git-
      - checkout
      - save_cache:
          paths:
            - .git
          key: v1-git-{{ .Revision }}
      - run: npm ci
      - *persist
  lint:
    <<: *defaults
    steps:
      - *restore
      - run:
          name: Lint
          command: npm run test:lint -- --quiet --output-file test-results/eslint/results.xml --format junit
      - store_test_results:
          path: test-results
  unit:
    <<: *defaults
    environment:
      JEST_JUNIT_OUTPUT_NAME: results.xml
    steps:
      - *restore
      - run:
          name: Unit
          environment:
              JEST_JUNIT_OUTPUT_DIR: test-results/unit
          command: npm run test:unit -- --reporters="default" --reporters="jest-junit" --coverage --coverageReporters=text --coverageReporters=lcov
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: test-results
  build:
    <<: *defaults
    environment:
      NODE_ENV: production
      NODE_OPTIONS: --max-old-space-size=4000
    steps:
      - *restore
      - run:
          name: Build
          command: npm run build
      - *persist
  store_build:
    <<: *defaults
    steps:
      - *restore
      - store_artifacts:
          path: build
  store_dist:
    <<: *defaults
    steps:
      - *restore
      - store_artifacts:
          path: dist
  integration:
    <<: *defaults
    environment:
      JEST_JUNIT_OUTPUT_NAME: results.txt
    steps:
      - *restore
      - run:
          name: Integration
          environment:
              JEST_JUNIT_OUTPUT_DIR: test-results/integration
          command: npm run test:integration -- --reporters="default" --reporters="jest-junit"
      - store_test_results:
          path: test-results

  deploy-npm:
    <<: *defaults
    environment:
      NODE_OPTIONS: --max-old-space-size=4000
    steps:
      - *restore
      - run: |
          echo export RELEASE_VERSION="0.1.0-prerelease.$(date +'%Y%m%d%H%M%S')" >> $BASH_ENV
          echo export NPM_TAG=circlelatest >> $BASH_ENV
          if [ "$CIRCLE_BRANCH" == "master" ]
            then echo export NPM_TAG=circlestable >> $BASH_ENV
          fi
          if [[ "$CIRCLE_BRANCH" == hotfix/* ]] # double brackets are important for matching the wildcard
            then echo export NPM_TAG=circlehotfix >> $BASH_ENV
          fi
      - run: npm version --no-git-tag-version $RELEASE_VERSION
      - run: |
          npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          npm publish --tag $NPM_TAG
      - run: git tag $RELEASE_VERSION
      - run: git push $CIRCLE_REPOSITORY_URL $RELEASE_VERSION

  deploy-gh-pages:
    <<: *defaults
    steps:
      - *restore
      - run: |
          git config --global user.email $(git log --pretty=format:"%ae" -n1)
          git config --global user.name $(git log --pretty=format:"%an" -n1)
      - run: npm run deploy -- -e $CIRCLE_BRANCH
      
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - unit:
          requires:
            - setup
      - build:
          requires:
            - setup
      - integration:
          requires:
            - build
      - store_build:
          requires:
            - build
      - store_dist:
          requires:
            - build
      - deploy-npm:
          requires:
            - lint
            - unit
            - integration
            - build
          filters:
            branches:
              only:
                - master
                - develop
                - circle
                - /^hotfix\/.*/
      - deploy-gh-pages:
          requires:
            - lint
            - unit
            - integration
            - build
