version: 2.1
aliases:
  - &step_restore_git_cache
    restore_cache:
      keys:
        - v1-git-{{ .Revision }}
        - v1-git-
  - &step_save_git_cache
    save_cache:
      paths:
        - .git
      key: v1-git-{{ .Revision }}
  - &step_restore_dependency_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package-lock.json" }}
        - v1-dependencies-
  - &step_save_dependency_cache
    save_cache:
      paths:
        - node_modules
      key: v1-dependencies-{{ checksum "package-lock.json" }}
  - &step_save_build_cache
    save_cache:
      paths:
        - build
      key: v1-build-{{ .Revision }}
  - &step_restore_build_cache
    restore_cache:
      keys:
        - v1-build-{{ .Revision }}
  - &step_save_dist_cache
    save_cache:
      paths:
        - dist
      key: v1-dist-{{ .Revision }}
  - &step_restore_dist_cache
    restore_cache:
      keys:
        - v1-dist-{{ .Revision }}
  - &config_job_environment
    docker:
      - image: circleci/node:8.16-browsers
    working_directory: ~/repo
  - &config_deploy_requirements
    requires:
      - build
    filters:
      branches:
        only:
          - master
          - develop
          - smoke
          - circle
          - /^hotfix\/.*/

jobs:
  build:
    <<: *config_job_environment
    environment:
      NODE_ENV: production
      JEST_JUNIT_OUTPUT_NAME: results.xml
    steps:
      - *step_restore_git_cache
      - checkout
      - *step_save_git_cache
      - *step_restore_dependency_cache
      - run: sudo npm install -g greenkeeper-lockfile
      - run: npm --production=false install
      - run: greenkeeper-lockfile-update
      - *step_save_dependency_cache
      - run:
          name: Lint
          command: npm run test:lint -- --quiet --output-file test-results/eslint/results.xml --format junit
      - run:
          name: Unit
          environment:
              JEST_JUNIT_OUTPUT_DIR: test-results/unit
          command: npm run test:unit -- --reporters="default" --reporters="jest-junit" --coverage --coverageReporters=text --coverageReporters=lcov
      - store_artifacts:
          path: coverage
      - run:
          name: Build
          command: npm run build
      - store_artifacts:
          path: build
      - store_artifacts:
          path: dist
      - *step_save_build_cache
      - *step_save_dist_cache
      - run:
          name: Integration
          environment:
              JEST_JUNIT_OUTPUT_DIR: test-results/integration
          command: npm run test:integration -- --reporters="default" --reporters="jest-junit"
      - store_test_results:
          path: test-results
      - run: greenkeeper-lockfile-upload

  deploy-npm:
    <<: *config_job_environment
    environment:
      NODE_OPTIONS: --max-old-space-size=4000
    steps:
      - run: |
          echo export RELEASE_VERSION="0.1.0-prerelease.$(date +'%Y%m%d%H%M%S')" >> $BASH_ENV
          echo export NPM_TAG=circlelatest >> $BASH_ENV
          if [ "$CIRCLE_BRANCH" == "master" ]
            then echo export NPM_TAG=circlestable >> $BASH_ENV
          fi
          if [[ "$CIRCLE_BRANCH" == hotfix/* ]] # double brackets are important for matching the wildcard
            then echo export NPM_TAG=circlehotfix >> $BASH_ENV
          fi
      - *step_restore_git_cache
      - checkout
      - *step_restore_dist_cache
      - run: npm version --no-git-tag-version $RELEASE_VERSION
      - run: |
          npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          npm publish --tag $NPM_TAG
      - run: git tag $RELEASE_VERSION
      - run: git push $CIRCLE_REPOSITORY_URL $RELEASE_VERSION

  deploy-gh-pages:
    <<: *config_job_environment
    steps:
      - *step_restore_git_cache
      - checkout
      - run: |
          git config --global user.email $(git log --pretty=format:"%ae" -n1)
          git config --global user.name $(git log --pretty=format:"%an" -n1)
      - *step_restore_build_cache
      - *step_restore_dependency_cache
      - run: npm run deploy -- -e $CIRCLE_BRANCH
      
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-npm:
          <<: *config_deploy_requirements
      - deploy-gh-pages:
          <<: *config_deploy_requirements
